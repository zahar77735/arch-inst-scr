#!/bin/bash
clear
read -p "Введите имя компьютера: " hostname
read -p "Введите имя пользователя: " username

echo 'Прописываем имя компьютера'
echo $hostname > /etc/hostname
ln -svf /usr/share/zoneinfo/Europe/Moscow /etc/localtime

echo '3.4 Добавляем русскую локаль системы'
echo "en_US.UTF-8 UTF-8" > /etc/locale.gen
echo "ru_RU.UTF-8 UTF-8" >> /etc/locale.gen 

echo 'Указываем язык системы'
echo 'LANG="ru_RU.UTF-8"' >> /etc/locale.conf
echo 'LC_MESSAGES="ru_RU.UTF-8"' >> /etc/locale.conf

echo 'Вписываем KEYMAP=ru FONT=cyr-sun16'
echo 'KEYMAP=ru' >> /etc/vconsole.conf
echo 'FONT=cyr-sun16' >> /etc/vconsole.conf

echo 'Обновим текущую локаль системы'
locale-gen

#если у нас SSD, то мы создадим zram
#ssd=$(cat /etc/fstab | grep ssd | wc -l)
#if [[ $ssd != 0 ]]; then
#	echo "У нас SSD и мы создаём ZRAM"
#	kern=$(cat /proc/cpuinfo | grep processor | wc -l)
#	echo 'zram' >> /etc/modules-load.d/zram.conf
#	echo 'options zram num_devices='$kern >> /etc/modprobe.d/zram.conf
#	mem=$(awk '/MemTotal/ {print $2}' /proc/meminfo)
#	let " var = $mem / 1000000 "
#	let " zram = $var * 1024 / 2 / $kern "
#	#echo $zram
#	for (( a = 0; a < $kern; a++ ))
#	do
#	echo 'KERNEL=="zram'$a'", ATTR{disksize}="'$zram'M" RUN="/usr/bin/mkswap /dev/zram'$a'", TAG+="systemd"' >> /etc/udev/rules.d/99-zram.rules
#	echo '/dev/zram'$a' none swap defaults 0 0' >> /etc/fstab
#	done
#	echo 'vm.swappiness=60' >> /etc/sysctl.conf
#fi

echo 'Установка доп. приложений'
pacman -S wget mc pkgfile --noconfirm
pkgfile --update

sed -i 's/HOOKS=(base udev autodetect modconf block filesystems keyboard fsck)/HOOKS=(base udev autodetect modconf block filesystems keyboard)/' ./etc/mkinitcpio.conf

echo 'Создадим загрузочный RAM диск'
mkinitcpio -p linux-zen

echo '3.5 Устанавливаем загрузчик'
#read -p "Введите раздел куда установим загрузчик: " esp
#bootctl --path=/boot install
#pacman -S grub efibootmgr os-prober
#grub-install --target=x86_64-efi --efi-directory=/boot/efi/ --bootloader-id=GRUB
#grub-mkconfig -o /boot/grub/grub.cfg

#read -p "Установить тему Tela для GRUB? [Y/n]" themes_grub
#if [[ -z $themes_grub || $themes_grub == y || $themes_grub == Y ]]
#  then wget https://raw.githubusercontent.com/zahar77735/arch-inst-scr/master/files/Tela.tar.xz
#  tar xvJf Tela.tar.xz
#  rm Tela.tar.xz
#  mkdir /boot/grub/themes
#  cp -a Tela /boot/grub/themes
#  rm -rf Tela
#  grep "GRUB_THEME=" /etc/default/grub 2>&1 >/dev/null && sed -i '/GRUB_THEME=/d' /etc/default/grub
#  echo "GRUB_THEME=\"/boot/grub/themes/Tela/theme.txt\"" >> /etc/default/grub
#  grub-mkconfig -o /boot/grub/grub.cfg
#elif [[ $themes_grub == n || $themes_grub == N ]]; then
#  echo 'Установка пропущена.'
#fi

#echo 'Ставим программу для Wi-fi'
#pacman -S dialog wpa_supplicant --noconfirm 

echo 'Создаем root пароль'
passwd

echo 'Добавляем пользователя'
useradd -m -g users -G wheel,audio,video,storage -s /bin/bash $username

echo 'Устанавливаем пароль пользователя'
passwd $username

echo 'Устанавливаем SUDO'
echo '%wheel ALL=(ALL) ALL' >> /etc/sudoers

echo 'Раскомментируем репозиторий multilib Для работы 32-битных приложений в 64-битной системе.'
echo '[multilib]' >> /etc/pacman.conf
echo 'Include = /etc/pacman.d/mirrorlist' >> /etc/pacman.conf
pacman-key --init
pacman-key --populate archlinux
pacman -Syy

read -p "Установить иксы? [Y/n]" vm_set
if [[ -z $vm_set || $vm_set == y || $vm_set == Y ]]
  then pacman -S xorg-server xorg-drivers xorg-xinit --noconfirm
elif [[ $vm_set == n || $vm_set == N ]]
  then echo 'Пропущена установка'
fi

read -p 'Ваша видеокарта nVidia? Установить проприетарный драйвер? [Y/n] ' nvidia_set
if [[ -z $nvidia_set || $nvidia_set == y || $nvidia_set == Y ]]
  then sudo pacman -S nvidia-dkms nvidia-utils lib32-nvidia-utils nvidia-settings opencl-nvidia lib32-opencl-nvidia vulkan-icd-loader lib32-vulkan-icd-loader libva-vdpau-driver --noconfirm
  sleep 15
  sed -i 's/MODULES=(/MODULES=(nvidia nvidia_modeset nvidia_uvm nvidia_drm /' ./etc/mkinitcpio.conf
#  sed -i 's/GRUB_CMDLINE_LINUX_DEFAULT="/GRUB_CMDLINE_LINUX_DEFAULT="nvidia-drm.modeset=1 /' ./etc/default/grub
  sleep 10
  mkinitcpio -p linux-zen
#  grub-mkconfig -o /boot/grub/grub.cfg
  mkdir /etc/pacman.d/hooks
  wget https://raw.githubusercontent.com/zahar77735/arch-inst-scr/master/files/nvidia.hook
  mv nvidia.hook /etc/pacman.d/hooks/nvidia.hook
  chmod 644 /etc/pacman.d/hooks/nvidia.hook
  sleep 10
elif [[ $nvidia_set == n || $nvidia_set == N ]]; then
  echo 'Установка пропущена.'
fi

echo ""
echo ""
echo "Какое окружение будем ставить? Скрипт может установить XFCE, KDE или GNOME "
echo "для этого укажите [G/X/K], Можно пропустить установку нажав Enter "
read -p "Можно ввести произвольную команду либо команды разделяя их && "$'\n' vm_setting
if [[ -z $vm_setting ]]
  then echo "Пропускаем установку GUI"
  sleep 5
elif [[ $vm_setting == x || $vm_setting == X ]]
  then pacman -S xfce4 xfce4-goodies file-roller gthumb plank gnome-calculator gedit dconf-editor pantheon-polkit-agent evince alsa-plugins pulseaudio-alsa libmtp mtpfs gvfs-mtp gvfs-gphoto2 --noconfirm
  pacman -Rscu mousepad --noconfirm
  pacman -S lightdm-gtk-greeter --noconfirm
  systemctl enable lightdm
  sleep 5
elif [[ $vm_setting == k || $vm_setting == K ]]
  then pacman -Sy plasma konsole kate dolphin sddm packagekit-qt5 qt5-xmlpatterns spectacle okular ark gwenview --noconfirm
  sleep 5
  systemctl enable sddm
  sleep 5
elif [[ $vm_setting == g || $vm_setting == G ]] 
  then pacman -S gnome gnome-shell gdm gnome-tweaks gthumb --noconfirm
  sleep 5
  systemctl enable gdm
  sleep 5
else $vm_setting
fi

echo "изменяем активный планировщик ввода-вывода"
wget https://raw.githubusercontent.com/zahar77735/arch-inst-scr/master/files/60-ioschedulers.rules
mv 60-ioschedulers.rules /etc/udev/rules.d/60-ioschedulers.rules
chmod 644 /etc/udev/rules.d/60-ioschedulers.rules
sleep 5

echo 'Ставим шрифты'
pacman -S ttf-liberation ttf-dejavu ttf-ubuntu-font-family --noconfirm 

echo 'Ставим сеть'
pacman -S networkmanager network-manager-applet ppp --noconfirm

echo 'Подключаем автозагрузку менеджера входа и интернет'
systemctl enable NetworkManager

echo 'Установка завершена! Перезагрузите систему.'

exit

