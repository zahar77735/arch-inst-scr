#!/bin/bash
read -p "Введите имя компьютера: " hostname
read -p "Введите имя пользователя: " username

echo 'Прописываем имя компьютера'
echo $hostname > /etc/hostname
ln -svf /usr/share/zoneinfo/Europe/Moscow /etc/localtime

echo '3.4 Добавляем русскую локаль системы'
echo "en_US.UTF-8 UTF-8" > /etc/locale.gen
echo "ru_RU.UTF-8 UTF-8" >> /etc/locale.gen 

echo 'Обновим текущую локаль системы'
locale-gen

echo 'Указываем язык системы'
echo 'LANG="ru_RU.UTF-8"' >> /etc/locale.conf
echo 'LC_MESSAGES="ru_RU.UTF-8"' >> /etc/locale.conf

echo 'Вписываем KEYMAP=ru FONT=cyr-sun16'
echo 'KEYMAP=ru' >> /etc/vconsole.conf
echo 'FONT=cyr-sun16' >> /etc/vconsole.conf
echo 'tmpfs /tmp tmpfs noatime,nodiratime,mode=1777,size=50% 0 0' | sudo tee -a /etc/fstab
echo -e "vm.swappiness=10" | sudo tee -a /etc/sysctl.conf

echo 'Установка доп. приложений'
pacman -S linux linux-firmware linux-headers nano dhcpcd netctl btrfs-progs wget mc pkgfile man
pkgfile --update

nano /etc/mkinitcpio.conf

echo 'Создадим загрузочный RAM диск'
mkinitcpio -p linux

echo '3.5 Устанавливаем загрузчик'
pacman -S grub os-prober --noconfirm
read -p "Куда ставим загрузчик: " devsection
grub-install /dev/$devsection

echo 'Обновляем grub.cfg'
grub-mkconfig -o /boot/grub/grub.cfg

echo 'Ставим программу для Wi-fi'
pacman -S dialog wpa_supplicant --noconfirm 

echo 'Добавляем пользователя'
useradd -m -g users -G wheel,audio,video,storage -s /bin/bash $username

echo 'Создаем root пароль'
passwd

echo 'Устанавливаем пароль пользователя'
passwd $username

echo 'Устанавливаем SUDO'
echo '%wheel ALL=(ALL) ALL' >> /etc/sudoers

echo 'Раскомментируем репозиторий multilib Для работы 32-битных приложений в 64-битной системе.'
echo '[multilib]' >> /etc/pacman.conf
echo 'Include = /etc/pacman.d/mirrorlist' >> /etc/pacman.conf
pacman-key --init
pacman-key --populate archlinux
pacman -Syy

read -p "Вы устанавливаете Arch Linux на виртуальную машину? [N/y]" vm_set
if [[ -z $vm_set || $vm_set == n || $vm_set == N ]]
  then gui_install="xorg-server xorg-drivers xorg-xinit"
elif [[ $vm_set == y || $vm_set == Y ]]
  then gui_install="xorg-server xorg-drivers xorg-xinit virtualbox-guest-utils"
fi

pacman -S $gui_install

read -p 'Ваша видеокарта nVidia? Установить проприетарный драйвер? [Y/n] ' nvidia_set
if [[ -z $nvidia_set || $nvidia_set == y || $nvidia_set == Y ]]
  then sudo pacman -S nvidia-dkms nvidia-utils lib32-nvidia-utils nvidia-settings opencl-nvidia lib32-opencl-nvidia vulkan-icd-loader lib32-vulkan-icd-loader libva-vdpau-driver --noconfirm
  sleep 15
  sed -i 's/MODULES=(/MODULES=(nvidia nvidia_modeset nvidia_uvm nvidia_drm /' ./etc/mkinitcpio.conf
  sed -i 's/GRUB_CMDLINE_LINUX_DEFAULT="/GRUB_CMDLINE_LINUX_DEFAULT="nvidia-drm.modeset=1 /' ./etc/default/grub
  sleep 10
  mkinitcpio -p linux
  grub-mkconfig -o /boot/grub/grub.cfg
  mkdir /etc/pacman.d/hooks
  wget https://raw.githubusercontent.com/zahar77735/arch-inst-scr/master/files/nvidia.hook
  mv nvidia.hook /etc/pacman.d/hooks/nvidia.hook
  chmod 644 /etc/pacman.d/hooks/nvidia.hook
  sleep 10
elif [[ $nvidia_set == n || $nvidia_set == N ]]; then
  echo 'Установка пропущена.'
fi

read -p "Что ставим XFCE, KDE, MATE или GNOME ? Указать [G/X/K/M] Пропустить-Enter " vm_setting
if [[ -z $vm_setting ]]
  then echo "Пропускаем установку GUI"
  sleep 5
elif [[ $vm_setting == x || $vm_setting == X ]]
  then pacman -S xfce4 xfce4-goodies file-roller plank gnome-calculator alsa-plugins pulseaudio-alsa --noconfirm && read -p "Какой DM ставим LightDM, LXDM, GDM ? Указать [1,2,3] " dm_set
  if [[ $dm_set == 1 ]]
    then pacman -S lightdm lightdm-gtk-greeter --noconfirm
    systemctl enable lightdm
    sleep 5
    sed -i 's/#greeter-session=example-gtk-gnome/greeter-session=lightdm-gtk-greeter /' ./etc/lightdm/lightdm.conf
    sleep 5
  elif [[ $dm_set == 2 ]]
    then pacman -S lxdm --noconfirm
    systemctl enable lxdm.service
    sleep 5
  elif [[ $dm_set == 3 ]]
    then pacman -S gdm --noconfirm
    systemctl enable gdm
    sleep 5
  fi
elif [[ $vm_setting == k || $vm_setting == K ]]
  then pacman -Sy plasma-meta kdebase sddm packagekit-qt5 qt5-xmlpatterns spectacle okular ark kvantum-qt5 latte-dock --noconfirm
  sleep 5
  pacman -R konqueror --noconfirm
  systemctl enable sddm
  sleep 5
elif [[ $vm_setting == g || $vm_setting == G ]] 
  then pacman -S gnome gnome-shell gdm --noconfirm
  sleep 5
  systemctl enable gdm
  sleep 5
elif [[ $vm_setting == m || $vm_setting == M ]] 
  then pacman -S mate gdm --noconfirm
  sleep 5
  systemctl enable gdm
  sleep 5
fi

echo "изменяем активный планировщик ввода-вывода"
wget https://raw.githubusercontent.com/zahar77735/arch-inst-scr/master/files/60-ioschedulers.rules
mv 60-ioschedulers.rules /etc/udev/rules.d/60-ioschedulers.rules
chmod 644 /etc/udev/rules.d/60-ioschedulers.rules
sleep 5

echo 'Ставим шрифты'
pacman -S ttf-liberation ttf-dejavu --noconfirm 

echo 'Ставим сеть'
pacman -S networkmanager network-manager-applet ppp --noconfirm

echo 'Подключаем автозагрузку менеджера входа и интернет'
systemctl enable NetworkManager


echo 'Установка завершена! Перезагрузите систему.'

exit

